#!/bin/sh

# Automount script for NTFS, EXT4, and other filesystems

# Default mount options
AUTOMOUNT_OPTS_NTFS="rw,noatime,uid=1000,gid=1000,umask=000,errors=continue,discard,force,prealloc"
AUTOMOUNT_OPTS_EXT4="rw,noatime,exec,acl"
AUTOMOUNT_OPTS_DEFAULT="rw,noatime"

# Directories
MEDIADIR="/media"
MOUNTPOINT="$MEDIADIR/RAW"

# Ensure script runs as root
[ "$(id -u)" -ne 0 ] && {
    echo "This script requires root permissions."
    exit 1
}

log() {
    echo "$*" | systemd-cat -p info -t "media-automount"
}

errorlog() {
    echo "$*" | systemd-cat -p err -t "media-automount"
}

# Get device from argument or auto-detect
if [ -z "$1" ]; then
    # Auto-detect the first available device
    DEVICE=$(lsblk -lp | grep " disk " | awk '{print $1}' | head -n 1)
else
    DEVICE="/dev/${1##*/}"
fi

# Check if the device exists
if [ ! -b "$DEVICE" ]; then
    errorlog "Device $DEVICE not found."
    exit 1
fi

# Detect filesystem type
FSTYPE=$(blkid -o value -s TYPE "$DEVICE")

# Exit if unknown filesystem
if [ -z "$FSTYPE" ]; then
    log "Unknown filesystem type on $DEVICE. Skipping."
    exit 0
fi

# Select mount options based on filesystem type
case "$FSTYPE" in
    ntfs)  MOUNT_OPTS="$AUTOMOUNT_OPTS_NTFS" ;;
    ext4)  MOUNT_OPTS="$AUTOMOUNT_OPTS_EXT4" ;;
    *)     MOUNT_OPTS="$AUTOMOUNT_OPTS_DEFAULT" ;;
esac

# Create mount point if not exists
mkdir -p "$MOUNTPOINT"

# Check if already mounted
if mountpoint -q "$MOUNTPOINT"; then
    log "$MOUNTPOINT is already mounted. Skipping."
    exit 0
fi

# Mount the device
if mount -t "$FSTYPE" -o "$MOUNT_OPTS" "$DEVICE" "$MOUNTPOINT"; then
    log "Mounted $DEVICE ($FSTYPE) at $MOUNTPOINT"

    # Set permissions for EXT4
    if [ "$FSTYPE" = "ext4" ]; then
        chown root:pi "$MOUNTPOINT"
        chmod 775 "$MOUNTPOINT"
        setfacl -d -m g:pi:rwx "$MOUNTPOINT"
    fi

    exit 0
else
    errorlog "Failed to mount $DEVICE ($FSTYPE) at $MOUNTPOINT"
    rmdir "$MOUNTPOINT"
    exit 1
fi
